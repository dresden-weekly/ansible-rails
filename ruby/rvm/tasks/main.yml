---
- name: Packages
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: present
    cache_valid_time: 86400
  with_flattened:
  - "{{ rvm_packages }}"
  - "{{ rvm_custom_packages }}"

- include: ruby187.yml
  when: rvm_default == '1.8.7' or '1.8.7' in rvm_rubies

- include: gpg_keys.yml
  when: rvm_gpg_keys != ''

- name: Install RVM
  shell: >
    curl -L https://get.rvm.io
    | bash -s stable --autolibs=disable --auto-dotfiles
  args:
    creates: ~/.rvm
    warn: no # don't show the curl warning (get_url can't pipe the script to bash)
  become: true
  become_user: "{{ rvm_user }}"

- name: Ruby versions
  shell: >
    ~/.rvm/bin/rvm install
    {{ '--default' if item == rvm_default else '' }}
    {{ item }}
  args:
    creates: "~/.rvm/rubies/ruby-{{ item }}"
  become: true
  become_user: "{{ rvm_user }}"
  with_flattened:
  - "{{ rvm_rubies }}"
  - "{{ rvm_default }}"

- name: Facts
  set_fact:
    RUBY_PREFIX: '~/.rvm/bin/rvm default do '

- name: Ruby Path
  shell: >
    {{ RUBY_PREFIX }} rvm gemdir
  become: true
  become_user: "{{ rvm_user }}"
  register: ruby_rvm_ruby_path_result
  changed_when: no

- name: Facts
  set_fact:
    RUBY_BIN: '{{ ruby_rvm_ruby_path_result.stdout_lines[0] }}/wrappers/ruby'

- name: Gem Version
  shell: >
    {{ RUBY_PREFIX }} gem --version
  become: true
  become_user: "{{ rvm_user }}"
  register: ruby_rvm_gem_version_result
  changed_when: no

- name: Gem Update System
  shell: >
    {{ RUBY_PREFIX }} gem update --system {{ rvm_gem_version }}
  become: true
  become_user: "{{ rvm_user }}"
  when: rvm_gem_version != '' and rvm_gem_version != ruby_rvm_gem_version_result.stdout
  register: ruby_rvm_gem_update_system_result
  changed_when: >
    "Aborting" not in ruby_rvm_gem_update_system_result.stdout

- name: Install gems
  shell: >
    {{ RUBY_PREFIX }} gem list
    | if ! grep "^{{ item }} " ; then {{ RUBY_PREFIX }} gem install {{ item }} ; fi
  become: true
  become_user: "{{ rvm_user }}"
  with_flattened:
  - "{{ rvm_install_gems }}"
  register: ruby_rvm_gem_install_result
  changed_when: >
    "Successfully installed {{ item }}" in ruby_rvm_gem_install_result.stdout
